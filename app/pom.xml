<?xml version="1.0" encoding="UTF-8"?>
<project
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <prerequisites>
        <maven>3.0.0</maven>
    </prerequisites>

    <groupId>com.aviafix</groupId>
    <artifactId>app</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Fixer</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <dropwizard.version>1.0.2</dropwizard.version>
        <mainClass>com.aviafix.FixerApplication</mainClass>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-core</artifactId>
            <version>${dropwizard.version}</version>
        </dependency>
        <dependency>
            <groupId>com.bendb.dropwizard</groupId>
            <artifactId>dropwizard-jooq</artifactId>
            <version>1.0.0-2</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.6</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.4.1</version>
                <configuration>
                    <createDependencyReducedPom>true</createDependencyReducedPom>

                    <transformers>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                            <mainClass>com.aviafix.FixerApplication</mainClass>
                        </transformer>
                    </transformers>
                    <!-- exclude signed Manifests -->
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>${mainClass}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.3</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>3.8.5</version>

                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>5.1.6</version>
                    </dependency>
                </dependencies>

                <!-- Specify the plugin configuration.
                     The configuration format is the same as for the standalone code generator -->
                <configuration>

                    <!-- JDBC connection parameters -->
                    <jdbc>
                        <driver>com.mysql.jdbc.Driver</driver>
                        <url>${jdbc.url}</url>
                        <user>${db.user}</user>
                        <password>${db.pass}</password>
                    </jdbc>

                    <!-- Generator parameters -->
                    <generator>
                        <database>
                            <name>org.jooq.util.mysql.MySQLDatabase</name>
                            <includes>.*</includes>
                            <excludes></excludes>
                            <inputSchema>${db.schema}</inputSchema>

                            <customTypes>
                                <customType>
                                    <!-- Specify the fully-qualified class name of your custom type -->
                                    <name>com.aviafix.db.DateConverter</name>

                                    <!-- Associate that custom type with your converter. Note, a
                                         custom type can only have one converter in jOOQ -->
                                    <type>java.time.LocalDate</type>
                                    <converter>com.aviafix.db.DateConverter</converter>
                                </customType>
                            </customTypes>

                            <!-- Then, associate custom types with database columns -->
                            <forcedTypes>
                                <forcedType>
                                    <!-- Specify again he fully-qualified class name of your custom type -->
                                    <name>com.aviafix.db.DateConverter</name>

                                    <!-- Add a list of comma-separated regular expressions matching columns -->
                                    <expressions>
                                        (.*orders\.date)|
                                        (.*orders\.orderRepairDate)|
                                        (.*hasParts\.repairDate)|
                                        (.*payOffline\.pymntDatepayOffline)|
                                        (.*payOnline\.pymntDateOnline)
                                    </expressions>
                                    <types>.*</types>
                                </forcedType>
                            </forcedTypes>

                        </database>
                        <target>
                            <packageName>com.aviafix.db.generated</packageName>
                            <directory>src/main/java</directory>
                        </target>
                        <generate>
                            <records>true</records>
                            <pojos>true</pojos>
                        </generate>
                        <strategy>
                            <matchers>
                                <tables>
                                    <table>
                                        <!-- Expression is omitted. This will make this rule apply to all tables -->
                                        <tableIdentifier>
                                            <!-- The optional transform element lets you apply a name transformation algorithm
                                            to transform the actual database name into a more convenient form. Possible values are:
                                                    - AS_IS  : Leave the database name as it is             : MY_name => MY_name
                                            - LOWER  : Transform the database name into lower case  : MY_name => my_name
                                            - UPPER  : Transform the database name into upper case  : MY_name => MY_NAME
                                            - CAMEL  : Transform the database name into camel case  : MY_name => myName
                                            - PASCAL : Transform the database name into pascal case : MY_name => MyName -->
                                            <transform>UPPER</transform>
                                            <!-- The mandatory expression element lets you specify a replacement expression to be used when
                                            replacing the matcher's regular expression. You can use indexed variables $0, $1, $2. -->
                                            <expression>$0</expression>
                                        </tableIdentifier>
                                        <tableClass>
                                            <!-- The optional transform element lets you apply a name transformation algorithm
                                            to transform the actual database name into a more convenient form. Possible values are:
                                                    - AS_IS  : Leave the database name as it is             : MY_name => MY_name
                                            - LOWER  : Transform the database name into lower case  : MY_name => my_name
                                            - UPPER  : Transform the database name into upper case  : MY_name => MY_NAME
                                            - CAMEL  : Transform the database name into camel case  : MY_name => myName
                                            - PASCAL : Transform the database name into pascal case : MY_name => MyName -->
                                            <transform>UPPER</transform>
                                            <!-- The mandatory expression element lets you specify a replacement expression to be used when
                                            replacing the matcher's regular expression. You can use indexed variables $0, $1, $2. -->
                                            <expression>$0</expression>
                                        </tableClass>
                                        <daoClass>
                                            <!-- The optional transform element lets you apply a name transformation algorithm
                                            to transform the actual database name into a more convenient form. Possible values are:
                                                    - AS_IS  : Leave the database name as it is             : MY_name => MY_name
                                            - LOWER  : Transform the database name into lower case  : MY_name => my_name
                                            - UPPER  : Transform the database name into upper case  : MY_name => MY_NAME
                                            - CAMEL  : Transform the database name into camel case  : MY_name => myName
                                            - PASCAL : Transform the database name into pascal case : MY_name => MyName -->
                                            <transform>UPPER</transform>
                                            <!-- The mandatory expression element lets you specify a replacement expression to be used when
                                            replacing the matcher's regular expression. You can use indexed variables $0, $1, $2. -->
                                            <expression>$0</expression>
                                        </daoClass>
                                        <recordClass>
                                            <!-- The optional transform element lets you apply a name transformation algorithm
                                            to transform the actual database name into a more convenient form. Possible values are:
                                                    - AS_IS  : Leave the database name as it is             : MY_name => MY_name
                                            - LOWER  : Transform the database name into lower case  : MY_name => my_name
                                            - UPPER  : Transform the database name into upper case  : MY_name => MY_NAME
                                            - CAMEL  : Transform the database name into camel case  : MY_name => myName
                                            - PASCAL : Transform the database name into pascal case : MY_name => MyName -->
                                            <transform>UPPER</transform>
                                            <!-- The mandatory expression element lets you specify a replacement expression to be used when
                                            replacing the matcher's regular expression. You can use indexed variables $0, $1, $2. -->
                                            <expression>$0Record</expression>
                                        </recordClass>
                                        <interfaceClass>
                                            <!-- The optional transform element lets you apply a name transformation algorithm
                                            to transform the actual database name into a more convenient form. Possible values are:
                                                    - AS_IS  : Leave the database name as it is             : MY_name => MY_name
                                            - LOWER  : Transform the database name into lower case  : MY_name => my_name
                                            - UPPER  : Transform the database name into upper case  : MY_name => MY_NAME
                                            - CAMEL  : Transform the database name into camel case  : MY_name => myName
                                            - PASCAL : Transform the database name into pascal case : MY_name => MyName -->
                                            <transform>UPPER</transform>
                                            <!-- The mandatory expression element lets you specify a replacement expression to be used when
                                            replacing the matcher's regular expression. You can use indexed variables $0, $1, $2. -->
                                            <expression>$0</expression>
                                        </interfaceClass>
                                        <pojoClass>
                                            <!-- The optional transform element lets you apply a name transformation algorithm
                                            to transform the actual database name into a more convenient form. Possible values are:
                                                    - AS_IS  : Leave the database name as it is             : MY_name => MY_name
                                            - LOWER  : Transform the database name into lower case  : MY_name => my_name
                                            - UPPER  : Transform the database name into upper case  : MY_name => MY_NAME
                                            - CAMEL  : Transform the database name into camel case  : MY_name => myName
                                            - PASCAL : Transform the database name into pascal case : MY_name => MyName -->
                                            <transform>UPPER</transform>
                                            <!-- The mandatory expression element lets you specify a replacement expression to be used when
                                            replacing the matcher's regular expression. You can use indexed variables $0, $1, $2. -->
                                            <expression>$0Projection</expression>
                                        </pojoClass>
                                    </table>
                                </tables>
                                <fields>
                                    <field>
                                        <fieldIdentifier>
                                            <!-- The optional transform element lets you apply a name transformation algorithm
                                            to transform the actual database name into a more convenient form. Possible values are:
                                                    - AS_IS  : Leave the database name as it is             : MY_name => MY_name
                                            - LOWER  : Transform the database name into lower case  : MY_name => my_name
                                            - UPPER  : Transform the database name into upper case  : MY_name => MY_NAME
                                            - CAMEL  : Transform the database name into camel case  : MY_name => myName
                                            - PASCAL : Transform the database name into pascal case : MY_name => MyName -->
                                            <transform>UPPER</transform>
                                            <!-- The mandatory expression element lets you specify a replacement expression to be used when
                                            replacing the matcher's regular expression. You can use indexed variables $0, $1, $2. -->
                                            <expression>$0</expression>
                                        </fieldIdentifier>
                                        <fieldMember>
                                            <!-- The optional transform element lets you apply a name transformation algorithm
                                            to transform the actual database name into a more convenient form. Possible values are:
                                                    - AS_IS  : Leave the database name as it is             : MY_name => MY_name
                                            - LOWER  : Transform the database name into lower case  : MY_name => my_name
                                            - UPPER  : Transform the database name into upper case  : MY_name => MY_NAME
                                            - CAMEL  : Transform the database name into camel case  : MY_name => myName
                                            - PASCAL : Transform the database name into pascal case : MY_name => MyName -->
                                            <transform>UPPER</transform>
                                            <!-- The mandatory expression element lets you specify a replacement expression to be used when
                                            replacing the matcher's regular expression. You can use indexed variables $0, $1, $2. -->
                                            <expression>$0</expression>
                                        </fieldMember>
                                        <fieldSetter>
                                            <!-- The optional transform element lets you apply a name transformation algorithm
                                            to transform the actual database name into a more convenient form. Possible values are:
                                                    - AS_IS  : Leave the database name as it is             : MY_name => MY_name
                                            - LOWER  : Transform the database name into lower case  : MY_name => my_name
                                            - UPPER  : Transform the database name into upper case  : MY_name => MY_NAME
                                            - CAMEL  : Transform the database name into camel case  : MY_name => myName
                                            - PASCAL : Transform the database name into pascal case : MY_name => MyName -->
                                            <transform>UPPER</transform>
                                            <!-- The mandatory expression element lets you specify a replacement expression to be used when
                                            replacing the matcher's regular expression. You can use indexed variables $0, $1, $2. -->
                                            <expression>$0</expression>
                                        </fieldSetter>
                                        <fieldGetter>
                                            <!-- The optional transform element lets you apply a name transformation algorithm
                                            to transform the actual database name into a more convenient form. Possible values are:
                                                    - AS_IS  : Leave the database name as it is             : MY_name => MY_name
                                            - LOWER  : Transform the database name into lower case  : MY_name => my_name
                                            - UPPER  : Transform the database name into upper case  : MY_name => MY_NAME
                                            - CAMEL  : Transform the database name into camel case  : MY_name => myName
                                            - PASCAL : Transform the database name into pascal case : MY_name => MyName -->
                                            <transform>UPPER</transform>
                                            <!-- The mandatory expression element lets you specify a replacement expression to be used when
                                            replacing the matcher's regular expression. You can use indexed variables $0, $1, $2. -->
                                            <expression>$0</expression>
                                        </fieldGetter>
                                    </field>
                                </fields>
                            </matchers>
                        </strategy>
                    </generator>



                </configuration>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.8.1</version>
                <configuration>
                    <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                    <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.3</version>
            </plugin>
        </plugins>
    </reporting>
</project>
