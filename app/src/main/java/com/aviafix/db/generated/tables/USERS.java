/**
 * This class is generated by jOOQ
 */
package com.aviafix.db.generated.tables;


import com.aviafix.db.generated.Aviafixers;
import com.aviafix.db.generated.Keys;
import com.aviafix.db.generated.tables.records.USERSRECORD;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class USERS extends TableImpl<USERSRECORD> {

    private static final long serialVersionUID = 1402670626;

    /**
     * The reference instance of <code>AviaFixers.users</code>
     */
    public static final USERS USERS = new USERS();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<USERSRECORD> getRecordType() {
        return USERSRECORD.class;
    }

    /**
     * The column <code>AviaFixers.users.uID</code>. userID
     */
    public final TableField<USERSRECORD, Integer> UID = createField("uID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "userID");

    /**
     * The column <code>AviaFixers.users.usrName</code>.
     */
    public final TableField<USERSRECORD, String> USRNAME = createField("usrName", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>AviaFixers.users.usrType</code>.
     */
    public final TableField<USERSRECORD, String> USRTYPE = createField("usrType", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * Create a <code>AviaFixers.users</code> table reference
     */
    public USERS() {
        this("users", null);
    }

    /**
     * Create an aliased <code>AviaFixers.users</code> table reference
     */
    public USERS(String alias) {
        this(alias, USERS);
    }

    private USERS(String alias, Table<USERSRECORD> aliased) {
        this(alias, aliased, null);
    }

    private USERS(String alias, Table<USERSRECORD> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Aviafixers.AVIAFIXERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<USERSRECORD, Integer> getIdentity() {
        return Keys.IDENTITY_USERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<USERSRECORD> getPrimaryKey() {
        return Keys.KEY_USERS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<USERSRECORD>> getKeys() {
        return Arrays.<UniqueKey<USERSRECORD>>asList(Keys.KEY_USERS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public USERS as(String alias) {
        return new USERS(alias, this);
    }

    /**
     * Rename this table
     */
    public USERS rename(String name) {
        return new USERS(name, null);
    }
}
