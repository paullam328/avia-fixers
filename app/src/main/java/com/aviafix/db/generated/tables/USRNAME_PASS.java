/**
 * This class is generated by jOOQ
 */
package com.aviafix.db.generated.tables;


import com.aviafix.db.generated.Aviafixers;
import com.aviafix.db.generated.Keys;
import com.aviafix.db.generated.tables.records.USRNAME_PASSRECORD;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class USRNAME_PASS extends TableImpl<USRNAME_PASSRECORD> {

    private static final long serialVersionUID = 1762972288;

    /**
     * The reference instance of <code>AviaFixers.UsrName_pass</code>
     */
    public static final USRNAME_PASS USRNAME_PASS = new USRNAME_PASS();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<USRNAME_PASSRECORD> getRecordType() {
        return USRNAME_PASSRECORD.class;
    }

    /**
     * The column <code>AviaFixers.UsrName_pass.UsrN</code>.
     */
    public final TableField<USRNAME_PASSRECORD, String> USRN = createField("UsrN", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * The column <code>AviaFixers.UsrName_pass.UsrPass</code>.
     */
    public final TableField<USRNAME_PASSRECORD, String> USRPASS = createField("UsrPass", org.jooq.impl.SQLDataType.VARCHAR.length(15), this, "");

    /**
     * Create a <code>AviaFixers.UsrName_pass</code> table reference
     */
    public USRNAME_PASS() {
        this("UsrName_pass", null);
    }

    /**
     * Create an aliased <code>AviaFixers.UsrName_pass</code> table reference
     */
    public USRNAME_PASS(String alias) {
        this(alias, USRNAME_PASS);
    }

    private USRNAME_PASS(String alias, Table<USRNAME_PASSRECORD> aliased) {
        this(alias, aliased, null);
    }

    private USRNAME_PASS(String alias, Table<USRNAME_PASSRECORD> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Aviafixers.AVIAFIXERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<USRNAME_PASSRECORD> getPrimaryKey() {
        return Keys.KEY_USRNAME_PASS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<USRNAME_PASSRECORD>> getKeys() {
        return Arrays.<UniqueKey<USRNAME_PASSRECORD>>asList(Keys.KEY_USRNAME_PASS_PRIMARY, Keys.KEY_USRNAME_PASS_USRID_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public USRNAME_PASS as(String alias) {
        return new USRNAME_PASS(alias, this);
    }

    /**
     * Rename this table
     */
    public USRNAME_PASS rename(String name) {
        return new USRNAME_PASS(name, null);
    }
}
