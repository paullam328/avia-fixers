/**
 * This class is generated by jOOQ
 */
package com.aviafix.db.generated.tables.records;


import com.aviafix.db.generated.tables.USRNAME_PASS;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class USRNAME_PASSRECORD extends UpdatableRecordImpl<USRNAME_PASSRECORD> implements Record2<String, String> {

    private static final long serialVersionUID = 905637760;

    /**
     * Setter for <code>AviaFixers.UsrName_pass.UsrN</code>.
     */
    public void USRN(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>AviaFixers.UsrName_pass.UsrN</code>.
     */
    public String USRN() {
        return (String) get(0);
    }

    /**
     * Setter for <code>AviaFixers.UsrName_pass.UsrPass</code>.
     */
    public void USRPASS(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>AviaFixers.UsrName_pass.UsrPass</code>.
     */
    public String USRPASS() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return USRNAME_PASS.USRNAME_PASS.USRN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return USRNAME_PASS.USRNAME_PASS.USRPASS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return USRN();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return USRPASS();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public USRNAME_PASSRECORD value1(String value) {
        USRN(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public USRNAME_PASSRECORD value2(String value) {
        USRPASS(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public USRNAME_PASSRECORD values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached USRNAME_PASSRECORD
     */
    public USRNAME_PASSRECORD() {
        super(USRNAME_PASS.USRNAME_PASS);
    }

    /**
     * Create a detached, initialised USRNAME_PASSRECORD
     */
    public USRNAME_PASSRECORD(String USRN, String USRPASS) {
        super(USRNAME_PASS.USRNAME_PASS);

        set(0, USRN);
        set(1, USRPASS);
    }
}
