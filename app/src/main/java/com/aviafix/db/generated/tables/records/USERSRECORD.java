/**
 * This class is generated by jOOQ
 */
package com.aviafix.db.generated.tables.records;


import com.aviafix.db.generated.tables.USERS;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class USERSRECORD extends UpdatableRecordImpl<USERSRECORD> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = 126785547;

    /**
     * Setter for <code>AviaFixers.users.uID</code>. userID
     */
    public void UID(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>AviaFixers.users.uID</code>. userID
     */
    public Integer UID() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>AviaFixers.users.usrName</code>.
     */
    public void USRNAME(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>AviaFixers.users.usrName</code>.
     */
    public String USRNAME() {
        return (String) get(1);
    }

    /**
     * Setter for <code>AviaFixers.users.usrType</code>.
     */
    public void USRTYPE(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>AviaFixers.users.usrType</code>.
     */
    public String USRTYPE() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return USERS.USERS.UID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return USERS.USERS.USRNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return USERS.USERS.USRTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return UID();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return USRNAME();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return USRTYPE();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public USERSRECORD value1(Integer value) {
        UID(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public USERSRECORD value2(String value) {
        USRNAME(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public USERSRECORD value3(String value) {
        USRTYPE(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public USERSRECORD values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached USERSRECORD
     */
    public USERSRECORD() {
        super(USERS.USERS);
    }

    /**
     * Create a detached, initialised USERSRECORD
     */
    public USERSRECORD(Integer UID, String USRNAME, String USRTYPE) {
        super(USERS.USERS);

        set(0, UID);
        set(1, USRNAME);
        set(2, USRTYPE);
    }
}
