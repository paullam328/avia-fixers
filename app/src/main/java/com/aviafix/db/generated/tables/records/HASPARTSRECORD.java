/**
 * This class is generated by jOOQ
 */
package com.aviafix.db.generated.tables.records;


import com.aviafix.db.generated.tables.HASPARTS;

import java.time.LocalDate;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HASPARTSRECORD extends UpdatableRecordImpl<HASPARTSRECORD> implements Record8<Integer, String, String, Double, Double, Integer, LocalDate, Integer> {

    private static final long serialVersionUID = -1414829445;

    /**
     * Setter for <code>AviaFixers.hasParts.partNum</code>.
     */
    public void PARTNUM(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>AviaFixers.hasParts.partNum</code>.
     */
    public Integer PARTNUM() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>AviaFixers.hasParts.partName</code>.
     */
    public void PARTNAME(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>AviaFixers.hasParts.partName</code>.
     */
    public String PARTNAME() {
        return (String) get(1);
    }

    /**
     * Setter for <code>AviaFixers.hasParts.repairStatus</code>.
     */
    public void REPAIRSTATUS(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>AviaFixers.hasParts.repairStatus</code>.
     */
    public String REPAIRSTATUS() {
        return (String) get(2);
    }

    /**
     * Setter for <code>AviaFixers.hasParts.repairCost</code>.
     */
    public void REPAIRCOST(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>AviaFixers.hasParts.repairCost</code>.
     */
    public Double REPAIRCOST() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>AviaFixers.hasParts.sellPrice</code>.
     */
    public void SELLPRICE(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>AviaFixers.hasParts.sellPrice</code>.
     */
    public Double SELLPRICE() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>AviaFixers.hasParts.qty</code>.
     */
    public void QTY(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>AviaFixers.hasParts.qty</code>.
     */
    public Integer QTY() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>AviaFixers.hasParts.repairDate</code>.
     */
    public void REPAIRDATE(LocalDate value) {
        set(6, value);
    }

    /**
     * Getter for <code>AviaFixers.hasParts.repairDate</code>.
     */
    public LocalDate REPAIRDATE() {
        return (LocalDate) get(6);
    }

    /**
     * Setter for <code>AviaFixers.hasParts.porderNum</code>.
     */
    public void PORDERNUM(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>AviaFixers.hasParts.porderNum</code>.
     */
    public Integer PORDERNUM() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, Double, Double, Integer, LocalDate, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, Double, Double, Integer, LocalDate, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return HASPARTS.HASPARTS.PARTNUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return HASPARTS.HASPARTS.PARTNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return HASPARTS.HASPARTS.REPAIRSTATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return HASPARTS.HASPARTS.REPAIRCOST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field5() {
        return HASPARTS.HASPARTS.SELLPRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return HASPARTS.HASPARTS.QTY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDate> field7() {
        return HASPARTS.HASPARTS.REPAIRDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return HASPARTS.HASPARTS.PORDERNUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return PARTNUM();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return PARTNAME();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return REPAIRSTATUS();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return REPAIRCOST();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value5() {
        return SELLPRICE();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return QTY();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDate value7() {
        return REPAIRDATE();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return PORDERNUM();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HASPARTSRECORD value1(Integer value) {
        PARTNUM(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HASPARTSRECORD value2(String value) {
        PARTNAME(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HASPARTSRECORD value3(String value) {
        REPAIRSTATUS(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HASPARTSRECORD value4(Double value) {
        REPAIRCOST(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HASPARTSRECORD value5(Double value) {
        SELLPRICE(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HASPARTSRECORD value6(Integer value) {
        QTY(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HASPARTSRECORD value7(LocalDate value) {
        REPAIRDATE(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HASPARTSRECORD value8(Integer value) {
        PORDERNUM(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HASPARTSRECORD values(Integer value1, String value2, String value3, Double value4, Double value5, Integer value6, LocalDate value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HASPARTSRECORD
     */
    public HASPARTSRECORD() {
        super(HASPARTS.HASPARTS);
    }

    /**
     * Create a detached, initialised HASPARTSRECORD
     */
    public HASPARTSRECORD(Integer PARTNUM, String PARTNAME, String REPAIRSTATUS, Double REPAIRCOST, Double SELLPRICE, Integer QTY, LocalDate REPAIRDATE, Integer PORDERNUM) {
        super(HASPARTS.HASPARTS);

        set(0, PARTNUM);
        set(1, PARTNAME);
        set(2, REPAIRSTATUS);
        set(3, REPAIRCOST);
        set(4, SELLPRICE);
        set(5, QTY);
        set(6, REPAIRDATE);
        set(7, PORDERNUM);
    }
}
